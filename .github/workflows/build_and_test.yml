# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: NLPTest Python package

on:
  push:
    branches:
      - "main"

  pull_request:
    branches:
      - "release/*"
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Setup Apache Hadoop
        # You may pin to the exact commit or the version.
        # uses: chakravarthik27/setup-hdfs@4c200ebccaf43aaf063743d3ae6155a72b2621c4
        uses: chakravarthik27/setup-hdfs@v1.0
        with:
          # The installed Apache Hadoop version.
          hdfs-version: 3.3.1

      - name: CHECK ENV's
        run: |
          echo %JAVA_HOME%
          echo %HADOOP_HOME%
          echo %SPARK_HOME%
      # - name: Create virtual environment
      #   run: python -m venv venv

      # - name: Activate virtual environment
      #   run: |
      #     .\venv\Scripts\Activate.ps1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if (-f requirements.txt ); then pip install -r requirements.txt; fi
          # If (Test-Path "requirements.txt") { pip install -r requirements.txt }
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          python -m spacy download en_core_web_sm
          pytest
